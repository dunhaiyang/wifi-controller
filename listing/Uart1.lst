C51 COMPILER V9.54   UART1                                                                 01/18/2017 12:11:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART1
OBJECT MODULE PLACED IN ..\output\Uart1.obj
COMPILER INVOKED BY: D:\c51_keil\C51\BIN\C51.EXE SourceFile\Arch\Uart1.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HeadFil
                    -e\Arch;.\HeadFile\OS_api;.\HeadFile\KQA_OS;.\HeadFile\App_api;.\HeadFile\App\Command_Conter;.\HeadFile\App\Command_DataS
                    -tructure;.\HeadFile\App\Command_Device;.\HeadFile\App\Command_Repeater;.\HeadFile\App\Command_WhiteList;.\HeadFile\App\C
                    -ommand_Kernel;.\HeadFile\MiddlewareBoardcast;.\HeadFile\MiddlewareMenu;.\HeadFile\MiddlewareTask;.\HeadFile\MiddlewareWi
                    -reless;.\HeadFile\MiddlewareSocket;.\HeadFile\MiddlewareWesocket) DEBUG OBJECTEXTEND PRINT(..\listing\Uart1.lst) OBJECT(
                    -..\output\Uart1.obj)

line level    source

   1          #include "Uart1.h"
   2          
   3          
   4          #ifdef  Uart1_Debug
   5          
   6          
   7          #define UART1_RECEIVE_MAX       10
   8          
   9          
  10          uint8_t Uart1_ReceiveBuffer[UART1_RECEIVE_MAX];
  11          
  12          
  13          uint8_t Uart1_ReceiveLen = 0;                                                   // 数据存入的位置
  14          
  15          
  16          uint8_t Uart1_FetchLen = 0;                                                             // 数据获取的位置
  17          
  18          
  19          //------------ 主串口 -------------
  20          //
  21          void Uart1_Init( void )
  22          {
  23   1      // 115200
  24   1      //
  25   1          SCON = 0x50;                // 8位数据,可变波特率
  26   1              
  27   1              AUXR |= 0x40;           // 定时器1时钟为Fosc,即1T
  28   1              
  29   1              AUXR &= 0xFE;           // 串口1选择定时器1为波特率发生器
  30   1              
  31   1              TMOD &= 0x0F;           // 设定定时器1为16位自动重装方式
  32   1              
  33   1              TL1 = 0xD0;                     // 设定定时初值
  34   1              
  35   1              TH1 = 0xFF;                     // 设定定时初值
  36   1              
  37   1              ET1 = 0;                        // 禁止定时器1中断
  38   1              
  39   1              TR1 = 1;                        // 启动定时器1
  40   1              
  41   1              PS = 1;                         // 高优先级
  42   1          
  43   1          ES = 1;
  44   1              
  45   1              EA = 1;
  46   1      }
  47          
  48          
  49          bool Uart1_Busy = 0;
  50          
C51 COMPILER V9.54   UART1                                                                 01/18/2017 12:11:29 PAGE 2   

  51          
  52          void Uart1_Interrupt( void ) interrupt 4
  53          {
  54   1              if(TI)
  55   1              { 
  56   2              TI = 0;
  57   2              
  58   2              Uart1_Busy = 0;
  59   2              }
  60   1          else if(RI)
  61   1              {
  62   2              RI = 0;
  63   2                      
  64   2                      // 避免越界
  65   2                      //
  66   2                      if (Uart1_ReceiveLen >= UART1_RECEIVE_MAX)
  67   2                      {
  68   3                              Uart1_ReceiveLen = 0;
  69   3                      }
  70   2                      
  71   2                      // 存储数据
  72   2                      //
  73   2                      Uart1_ReceiveBuffer[Uart1_ReceiveLen++] = SBUF;
  74   2              }
  75   1      }
  76          
  77          
  78          bool Uart1_Available(void)
  79          {
  80   1              return (Uart1_FetchLen != Uart1_ReceiveLen);
  81   1      }
  82          
  83          
  84          
  85          uint8_t Uart1_ReceiveByte(void)
  86          {
  87   1              // 避免越界
  88   1              //
  89   1              if (Uart1_FetchLen >= UART1_RECEIVE_MAX)
  90   1              {
  91   2                      Uart1_FetchLen = 0;
  92   2              }
  93   1              
  94   1              // 获取数据
  95   1              //
  96   1              return Uart1_ReceiveBuffer[Uart1_FetchLen++];
  97   1      }
  98          
  99          
 100          void Uart1_SendByte(uint8_t send_data)
 101          {       
 102   1          while (Uart1_Busy)
 103   1                      ;
 104   1          
 105   1          Uart1_Busy = 1;
 106   1          
 107   1          SBUF = send_data;
 108   1      }
 109          
 110          
 111          void Uart1_SendNString(uint8_t *send_string, uint8_t len)
 112          {
C51 COMPILER V9.54   UART1                                                                 01/18/2017 12:11:29 PAGE 3   

 113   1              uint8_t i = 0;
 114   1      
 115   1              for (i = 0; i < len; ++i)
 116   1              {
 117   2                      Uart1_SendByte(send_string[i]);
 118   2              }
 119   1      }
 120          
 121          void Uart1_SendString(uint8_t *send_string)
 122          {
 123   1              while (*send_string != 0)
 124   1              {
 125   2                      Uart1_SendByte(*send_string);
 126   2                      
 127   2                      send_string++;
 128   2              }
 129   1      }
 130          
 131          
 132          // 为了支持printf的重定向
 133          //
 134          int8_t putchar(int8_t c)
 135          {
 136   1              Uart1_SendByte(c);
 137   1              
 138   1              return c;
 139   1      }
 140          
 141          
 142          #endif
 143          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     12       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
