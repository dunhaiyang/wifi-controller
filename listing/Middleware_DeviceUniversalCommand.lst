C51 COMPILER V9.54   MIDDLEWARE_DEVICEUNIVERSALCOMMAND                                     01/10/2017 18:08:21 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MIDDLEWARE_DEVICEUNIVERSALCOMMAND
OBJECT MODULE PLACED IN ..\output\Middleware_DeviceUniversalCommand.obj
COMPILER INVOKED BY: D:\c51_keil\C51\BIN\C51.EXE SourceFile\MiddlewareWesocket\Middleware_DeviceUniversalCommand.c LARGE
                    - OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HeadFile\Arch;.\HeadFile\OS_api;.\HeadFile\KQA_OS;.\HeadFile\App_api;.\HeadFile\App\C
                    -ommand_Conter;.\HeadFile\App\Command_DataStructure;.\HeadFile\App\Command_Device;.\HeadFile\App\Command_Repeater;.\HeadF
                    -ile\App\Command_WhiteList;.\HeadFile\App\Command_Kernel;.\HeadFile\MiddlewareBoardcast;.\HeadFile\MiddlewareWesocket) DE
                    -BUG OBJECTEXTEND PRINT(..\listing\Middleware_DeviceUniversalCommand.lst) OBJECT(..\output\Middleware_DeviceUniversalComm
                    -and.obj)

line level    source

   1          #include "Middleware_DeviceUniversalCommand.h"
   2          
   3          
   4          
   5          uint16_t        DeviceUniversalCommand_DeviceNo;
   6          
   7          uint8_t         DeviceUniversalCommand_DeviceType;
   8          
   9          
  10          bool __DeviceUniversalCommand(uint8_t *router, uint8_t len, uint8_t *tmpContent)
  11          {
  12   1              uint8_t         *tmpData = MiddlewareData_Malloc(MiddlewareData_SendDataUrgency);
  13   1              
  14   1              uint8_t         index;
  15   1              
  16   1              uint16_t        tmpParityValue;
  17   1              
  18   1              if (!tmpData)
  19   1              {
  20   2                      return 0;
  21   2              }
  22   1              // 设备编号，命令编号， 命令流水号，中继
  23   1              //
  24   1              tmpData[0] = DeviceUniversalCommand_DeviceNo;
  25   1              tmpData[1] = DeviceUniversalCommand_DeviceNo >> 8;
  26   1              tmpData[2] = 19;
  27   1              tmpData[4] = router[0];
  28   1              tmpData[5] = router[0];
  29   1              tmpData[6] = router[1];
  30   1              tmpData[7] = router[2];
  31   1              tmpData[8] = 0xE5;
  32   1              
  33   1              // 设备序列号
  34   1              //
  35   1              memset(tmpData + 9, 0xFF, 8);
  36   1              
  37   1              // 设备编号
  38   1              //
  39   1              tmpData[17] = DeviceUniversalCommand_DeviceNo;
  40   1              tmpData[18] = DeviceUniversalCommand_DeviceNo >> 8;
  41   1              
  42   1              // 设备类型
  43   1              //
  44   1              tmpData[19] = DeviceUniversalCommand_DeviceType;
  45   1              
  46   1              // 控制值
  47   1              //
  48   1              for (index = 0; index < len; index++)
  49   1              {
  50   2      //              tmpData[20 + index] = (QuickTransferTable[tmpContent[index * 2 + 0]] << 4) + 
C51 COMPILER V9.54   MIDDLEWARE_DEVICEUNIVERSALCOMMAND                                     01/10/2017 18:08:21 PAGE 2   

  51   2      //                                                              QuickTransferTable[tmpContent[index * 2 + 1]];
  52   2              }
  53   1              // 内部和校验
  54   1          //
  55   1          tmpParityValue = Temporary_CalcSumParity(tmpData + 8, 20);
  56   1          tmpData[28] = tmpParityValue;
  57   1          tmpData[29] = tmpParityValue >> 8;
  58   1          
  59   1          // 外部和校验
  60   1          //
  61   1          tmpParityValue = Temporary_CalcSumParity(tmpData, 30);
  62   1          tmpData[Enum_Wirelss_ParityL] = tmpParityValue;
  63   1          tmpData[Enum_Wirelss_ParityH] = tmpParityValue >> 8;
  64   1              
  65   1              return 1;
  66   1      }
*** WARNING C280 IN LINE 10 OF SourceFile\MiddlewareWesocket\Middleware_DeviceUniversalCommand.c: 'tmpContent': unrefere
             -nced local variable
  67          
  68          
  69          bool DeviceUniversalCommand_DealFrameText(uint8_t **Data)
  70          {
  71   1              uint8_t         router[3];
  72   1              
  73   1              uint8_t         len;
  74   1              
  75   1              uint8_t         *tmpContent;
  76   1              
  77   1              // 获取设备编号
  78   1              //
  79   1              if (!Json_ReceiveFrameUintValue(Data, "dn\":\"", 5, &DeviceUniversalCommand_DeviceNo))
  80   1              {
  81   2                      return 0;
  82   2              }
  83   1              
  84   1              // 获取设备类型
  85   1              //
  86   1              if (!Json_ReceiveFrameCharValue(Data, "dt\":\"", 5, &DeviceUniversalCommand_DeviceType))
  87   1              {
  88   2                      return 0;
  89   2              }
  90   1              
  91   1              // 从设备列表中查找路由信息
  92   1              //
  93   1      //      if (!DeviceInfo_GetRouter(DeviceUniversalCommand_DeviceNo, DeviceUniversalCommand_DeviceType, router))
  94   1      //      {
  95   1      //              return 0;
  96   1      //      }
  97   1              
  98   1              // 获取指令长度
  99   1              //
 100   1              if (!Json_ReceiveFrameCharValue(Data, "len\":\"", 6, &len))
 101   1              {
 102   2                      return 0;
 103   2              }
 104   1              
 105   1              // 获取指令内容
 106   1              //
 107   1              if (!Json_ReceiveFrameStringValue(Data, "cc\":[", 5, &tmpContent))
 108   1              {
 109   2                      return 0;
 110   2              }
C51 COMPILER V9.54   MIDDLEWARE_DEVICEUNIVERSALCOMMAND                                     01/10/2017 18:08:21 PAGE 3   

 111   1              
 112   1              // 封装通用控制指令
 113   1              //
 114   1              while (*tmpContent == '"')
 115   1              {
 116   2                      // 跳过引号
 117   2                      //
 118   2                      tmpContent++;
 119   2                      
 120   2                      // 获取数据
 121   2                      //
 122   2                      if (!__DeviceUniversalCommand(router, len, tmpContent))
 123   2                      {
 124   3                              MiddlewareData_Empty_SendDataNormal();
 125   3                              
 126   3                              return 0;
 127   3                      }
 128   2                      // 跳过已经获取到的数据
 129   2                      //
 130   2                      tmpContent = tmpContent + 2 * len;
 131   2                      
 132   2                      // 跳过两个字符
 133   2                      //
 134   2                      tmpContent += 2;
 135   2              }
 136   1              
 137   1              return 1;
 138   1      }
 139          
 140          
 141          
 142          void DeviceUniversalCommand_SendFrameTextToPc(uint16_t cmdSerialNo, uint8_t *Data)
 143          {
 144   1              uint16_t        tmpDataLen = 0;
 145   1              
 146   1              // websocket前缀
 147   1              //
 148   1              Data[tmpDataLen++] = 0x81;
 149   1              
 150   1              Data[tmpDataLen++] = 0xFE;
 151   1              
 152   1              // 负载长度字段
 153   1              //
 154   1              Data[tmpDataLen++] = 0x00;
 155   1              
 156   1              Data[tmpDataLen++] = 0x00;
 157   1              
 158   1              // 添加掩码
 159   1              //
 160   1              Data[tmpDataLen++] = 0x00;
 161   1              
 162   1              Data[tmpDataLen++] = 0x00;
 163   1              
 164   1              Data[tmpDataLen++] = 0x00;
 165   1              
 166   1              Data[tmpDataLen++] = 0x00;
 167   1              
 168   1              // 负载数据内容: 指令号和序列号
 169   1              //
 170   1              memcpy(Data + tmpDataLen, "{\"cn\":\"010\",\"csn\":\"", 19);
 171   1              tmpDataLen += 19;
 172   1              
C51 COMPILER V9.54   MIDDLEWARE_DEVICEUNIVERSALCOMMAND                                     01/10/2017 18:08:21 PAGE 4   

 173   1              Data[tmpDataLen++] = cmdSerialNo / 10000 + '0';
 174   1              Data[tmpDataLen++] = cmdSerialNo / 1000 % 10 + '0';
 175   1              Data[tmpDataLen++] = cmdSerialNo / 100 % 10 + '0';
 176   1              Data[tmpDataLen++] = cmdSerialNo / 10 % 10 + '0';
 177   1              Data[tmpDataLen++] = cmdSerialNo % 10 + '0';
 178   1              
 179   1              // 添加了设备编号
 180   1              //
 181   1              memcpy(Data + tmpDataLen, "\",\"dn\":\"", 8);
 182   1              tmpDataLen += 8;
 183   1              
 184   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceNo / 10000 + '0';
 185   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceNo / 1000 % 10 + '0';
 186   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceNo / 100 % 10 + '0';
 187   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceNo / 10 % 10 + '0';
 188   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceNo % 10 + '0';
 189   1              
 190   1              // 添加了设备类型
 191   1              //
 192   1              memcpy(Data + tmpDataLen, "\",\"dt\":\"", 8);
 193   1              tmpDataLen += 8;
 194   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceType / 100 % 10 + '0';
 195   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceType / 10 % 10 + '0';
 196   1              Data[tmpDataLen++] = DeviceUniversalCommand_DeviceType % 10 + '0';
 197   1              
 198   1              // 应答结果
 199   1              //
 200   1              memcpy(Data + tmpDataLen, "\",\"rcheck\":true}", 16);
 201   1              
 202   1              tmpDataLen += 16;
 203   1              
 204   1              // 清楚所有结果
 205   1              //
 206   1              MiddlewareData_Empty_ReceiveDataUrgency();
 207   1              
 208   1              // 负载长度字段
 209   1              //
 210   1              Data[2] = (tmpDataLen - 8) >> 8;
 211   1              
 212   1              Data[3] = (tmpDataLen - 8) ;
 213   1              
 214   1      //      Ch395_Write(peerSockfd, Data, tmpDataLen);
 215   1              
 216   1      //      printf("universal pc end\r\n");
 217   1      }
 218          
 219          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1713    ----
   CONSTANT SIZE    =     80    ----
   XDATA SIZE       =      3      27
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
