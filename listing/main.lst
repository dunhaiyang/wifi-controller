C51 COMPILER V9.54   MAIN                                                                  01/18/2017 15:58:49 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\output\main.obj
COMPILER INVOKED BY: D:\c51_keil\C51\BIN\C51.EXE SourceFile\Init\main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\HeadFile
                    -\Arch;.\HeadFile\OS_api;.\HeadFile\KQA_OS;.\HeadFile\App_api;.\HeadFile\App\Command_Conter;.\HeadFile\App\Command_DataSt
                    -ructure;.\HeadFile\App\Command_Device;.\HeadFile\App\Command_Repeater;.\HeadFile\App\Command_WhiteList;.\HeadFile\App\Co
                    -mmand_Kernel;.\HeadFile\MiddlewareBoardcast;.\HeadFile\MiddlewareMenu;.\HeadFile\MiddlewareTask;.\HeadFile\MiddlewareWir
                    -eless;.\HeadFile\MiddlewareSocket;.\HeadFile\MiddlewareWesocket) DEBUG OBJECTEXTEND PRINT(..\listing\main.lst) OBJECT(..
                    -\output\main.obj)

line level    source

   1          
   2          // === 伪终端（控制台）指令
   3          //
   4          #include "Middleware_Menu.h"
   5          
   6          
   7          // === 软实时任务
   8          //
   9          #include "Middleware_Task.h"
  10          
  11          
  12          // === 广播搜索
  13          //
  14          #include "Middleware_Boardcast.h"
  15          
  16          
  17          // === 无线（zigbee）
  18          //
  19          #include "Middleware_Wireless.h"
  20          
  21          
  22          // === 网络（wifi或者enthernet）
  23          //
  24          #include "Middleware_Socket.h"
  25          
  26          
  27          /*
  28                  =====================  4. settup（只执行一次）  =====================
  29          */
  30          
  31          void setup(void)
  32          {
  33   1              // 系统初始化
  34   1              //
  35   1              App_Hal_Api.init();                                                                                                                                                     // 初始化IAP15操作系统
  36   1              
  37   1              App_Hal_Api.console->registerMenu(menu, sizeof(menu)/sizeof(menu[0]));                                          // 注册伪终端指令
  38   1              
  39   1              App_Hal_Api.scheduler->registerTask(task, sizeof(task)/sizeof(task[0]));                                        // 注册任务
  40   1      
  41   1      #ifdef  USING_MODULE_NETWORK
  42   1              
  43   1              App_Hal_Api.network->registerErrorFunction(MiddlewareSocket_NetworkError);                                      // 注册网络出错回调函数
  44   1              
  45   1      #endif
  46   1              
  47   1              // APP初始化
  48   1              //
  49   1              ControlerInfo_Init();                                                                                                                                           // 控制器参数初始化
  50   1              
C51 COMPILER V9.54   MAIN                                                                  01/18/2017 15:58:49 PAGE 2   

  51   1              NormalDeviceInfo_Init();                                                                                                                                        // 普通设备列表初始化
  52   1              
  53   1              SpecialDeviceInfo_Init();                                                                                                                                       // 特殊设备列表初始化
  54   1              
  55   1              
  56   1              // 提醒控制器初始化完毕
  57   1              //
  58   1              App_Hal_Api.led->setTime(ALL_LED, 1000);                                                                                                        // 亮灯1000ms
  59   1              
  60   1              App_Hal_Api.beep->setTime(50);                                                                                                                          // 开启蜂鸣50ms
  61   1      }
  62          
  63          
  64          
  65          /*
  66                  ====================  5. loop（死循环）  =========================
  67          */
  68          void fast_loop(void)
  69          {
  70   1              App_Hal_Api.led->run();                                                                                                                                         // 执行灯任务
  71   1              
  72   1              App_Hal_Api.beep->run();                                                                                                                                        // 执行蜂鸣器任务
  73   1              
  74   1      #ifdef  USING_MODULE_NETWORK
  75   1              
  76   1              App_Hal_Api.network->run();                                                                                                                                     // 执行网络底层函数
  77   1              
  78   1              MiddlewareBoardcast_FastTask();                                                                                                                         // 接收广播数据任务
  79   1              
  80   1      #endif
  81   1              
  82   1              MiddlewareWireless_FastTask();                                                                                                                          // 接收无线数据任务
  83   1              
  84   1              MiddlewareSocket_FastTask();                                                                                                                            // 接收网络数据任务
  85   1      }
  86          
  87          
  88          void loop(void)
  89          {
  90   1              static uint32_t loopTime = 0;
  91   1              
  92   1              fast_loop();
  93   1              
  94   1              if (HAL_DIFFERENT4_TIME(App_Hal_Api.scheduler->milliseconds(), loopTime) >= 5)
  95   1              {
  96   2                      loopTime = App_Hal_Api.scheduler->milliseconds();
  97   2                      
  98   2                      App_Hal_Api.scheduler->ticksIncrease();
  99   2                      
 100   2      //              if (App_Hal_Api.scheduler->ticks % 200 == 0)
 101   2      //              {
 102   2      //                      printf("milliseconds = %lu\r\n", App_Hal_Api.scheduler->milliseconds());
 103   2      //              }
 104   2              }
 105   1              App_Hal_Api.scheduler->run();
 106   1      }
 107          
 108          
 109          /*
 110                  ====================  6. main macro  ======================
 111          */
 112          APP_HAL_IAP15_MAIN()
C51 COMPILER V9.54   MAIN                                                                  01/18/2017 15:58:49 PAGE 3   

 113          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    516    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
