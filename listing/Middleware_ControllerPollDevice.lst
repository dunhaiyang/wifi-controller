C51 COMPILER V9.54   MIDDLEWARE_CONTROLLERPOLLDEVICE                                       01/10/2017 18:08:21 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MIDDLEWARE_CONTROLLERPOLLDEVICE
OBJECT MODULE PLACED IN ..\output\Middleware_ControllerPollDevice.obj
COMPILER INVOKED BY: D:\c51_keil\C51\BIN\C51.EXE SourceFile\MiddlewareWesocket\Middleware_ControllerPollDevice.c LARGE O
                    -PTIMIZE(8,SPEED) BROWSE INCDIR(.\HeadFile\Arch;.\HeadFile\OS_api;.\HeadFile\KQA_OS;.\HeadFile\App_api;.\HeadFile\App\Com
                    -mand_Conter;.\HeadFile\App\Command_DataStructure;.\HeadFile\App\Command_Device;.\HeadFile\App\Command_Repeater;.\HeadFil
                    -e\App\Command_WhiteList;.\HeadFile\App\Command_Kernel;.\HeadFile\MiddlewareBoardcast;.\HeadFile\MiddlewareWesocket) DEBU
                    -G OBJECTEXTEND PRINT(..\listing\Middleware_ControllerPollDevice.lst) OBJECT(..\output\Middleware_ControllerPollDevice.ob
                    -j)

line level    source

   1          #include "Middleware_ControllerPollDevice.h"
   2          
   3          
   4          void __SendPollDataToDevice(uint8_t index)
   5          {
   6   1              uint16_t   tmpParityValue = 0;
   7   1          
   8   1              // 每次发送轮询，设备增加失败次数，有应答则清除
   9   1              //
  10   1      //    DeviceInfo_Set_FailTimes(index);
  11   1          
  12   1          // 设备编号
  13   1          //
  14   1      //    NRF905_SendBuffer[0] = DeviceList[index].deviceNo;
  15   1      //    
  16   1      //    NRF905_SendBuffer[1] = DeviceList[index].deviceNo >> 8;
  17   1          
  18   1          // 命令编号
  19   1          //
  20   1          NRF905_SendBuffer[2] = 0x01;
  21   1          
  22   1          // 命令流水
  23   1          //
  24   1          NRF905_SendBuffer[3] = 0x00;
  25   1              
  26   1          // 使用主路由
  27   1          //
  28   1      //      NRF905_SendBuffer[4] = DeviceList[index].deviceMasterRouter[0];       // 目的中继
  29   1      //      
  30   1      //      NRF905_SendBuffer[5] = DeviceList[index].deviceMasterRouter[0];       // 中继1
  31   1      //      
  32   1      //      NRF905_SendBuffer[6] = DeviceList[index].deviceMasterRouter[1];       // 中继2
  33   1      //      
  34   1      //      NRF905_SendBuffer[7] = DeviceList[index].deviceMasterRouter[2];       // 中继3
  35   1          
  36   1          // 填充字符
  37   1          //
  38   1          NRF905_SendBuffer[8] = 0xF1;
  39   1          
  40   1          // 设备编号
  41   1          //
  42   1          NRF905_SendBuffer[9] = NRF905_SendBuffer[0];
  43   1          
  44   1          NRF905_SendBuffer[10] = NRF905_SendBuffer[1];
  45   1          
  46   1          // 设备类型
  47   1          //
  48   1      //    NRF905_SendBuffer[11] = DeviceList[index].deviceType;
  49   1          
  50   1          // 无线信道
C51 COMPILER V9.54   MIDDLEWARE_CONTROLLERPOLLDEVICE                                       01/10/2017 18:08:21 PAGE 2   

  51   1          //
  52   1      //    NRF905_SendBuffer[12] = WirelessChannel;
  53   1          
  54   1          // 秒\分\时\日\星期\月\年
  55   1          //
  56   1          NRF905_SendBuffer[13] = BCD(SysTime.second);
  57   1          
  58   1          NRF905_SendBuffer[14] = BCD(SysTime.minute);
  59   1          
  60   1          NRF905_SendBuffer[15] = BCD(SysTime.hour);
  61   1          
  62   1          NRF905_SendBuffer[16] = BCD(SysTime.day);
  63   1          
  64   1          NRF905_SendBuffer[17] = BCD(SysTime.week);
  65   1          
  66   1          NRF905_SendBuffer[18] = BCD(SysTime.month);
  67   1          
  68   1          NRF905_SendBuffer[19] = BCD(SysTime.year);
  69   1          
  70   1          // 内部和校验
  71   1          //
  72   1          tmpParityValue = Temporary_CalcSumParity(NRF905_SendBuffer + 8, 12);
  73   1          NRF905_SendBuffer[20] = tmpParityValue;
  74   1          NRF905_SendBuffer[21] = tmpParityValue >> 8;
  75   1          
  76   1          // 填充字符0xF1
  77   1          //
  78   1          memset(NRF905_SendBuffer + 22, 0xF1, 8);
  79   1          
  80   1          // 外部和校验
  81   1          //
  82   1          tmpParityValue = Temporary_CalcSumParity(NRF905_SendBuffer, 30);
  83   1          NRF905_SendBuffer[30] = tmpParityValue;
  84   1          NRF905_SendBuffer[31] = tmpParityValue >> 8;
  85   1          
  86   1          // 发送轮询指令
  87   1          //
  88   1      //    Wireless_SendDataToDevice(NRF905_SendBuffer);
  89   1          
  90   1              
  91   1              // 根据中继来设置无线发送等待超时时间
  92   1              //
  93   1              Pca_Start(NRF905_SendBuffer, 0);
  94   1      }
*** WARNING C280 IN LINE 4 OF SourceFile\MiddlewareWesocket\Middleware_ControllerPollDevice.c: 'index': unreferenced loc
             -al variable
  95          
  96          
  97          // 发送轮询指令到设备，设备回应包有两种：
  98          // 一种是直接数据（如实时消费机）， 一种是间接数据（如脱机设备， 需要进一步读取脱机数据）
  99          //
 100          void ControllerPollDevice_SendPollDataToDevice(void)
 101          {
 102   1      //      static uint8_t index = 0;
 103   1      //      
 104   1      //      for (; index < DeviceInfo_DeviceMaxNum; index++)
 105   1      //      {
 106   1      //              if (!DeviceList[index].canUseFlag)
 107   1      //              {
 108   1      //                      COM_GREEN = 0;                                                  // 亮绿灯
 109   1      //                      
 110   1      //                      __SendPollDataToDevice(index);                  // 发送轮询数据
C51 COMPILER V9.54   MIDDLEWARE_CONTROLLERPOLLDEVICE                                       01/10/2017 18:08:21 PAGE 3   

 111   1      //                      
 112   1      //                      DeviceInfo_CurrentIndex = index++;              // 保存好刚刚设备轮询的索引
 113   1      //                      
 114   1      //                      printf("poll\r\n");
 115   1      //      
 116   1      //                      COM_GREEN = 1;                                                  // 灭绿灯
 117   1      //                      
 118   1      //                      return;
 119   1      //              }
 120   1      //      }
 121   1      //      index = 0;
 122   1      }
 123          
 124          
 125          // 发送间接数据, 
 126          //
 127          void ControllerPollDevice_ReadDirectData(void)
 128          {
 129   1              // 处于读取脱机数据阶段
 130   1              //
 131   1      //      if (OneCardDataUpload_IndirectCount--)
 132   1      //      {
 133   1      //              ReadOneOfflineData_DealData();
 134   1      //      }
 135   1      //      // 结束读取脱机数据阶段
 136   1      //      //
 137   1      //      else
 138   1      //      {
 139   1      //              OneCardDataUpload_PollDeviceStatus = 2;
 140   1      //      }
 141   1      }
 142          
 143          
 144          // 恢复成轮询状态
 145          //
 146          void ControllerPollDevice_RecoverPollStatus(void)
 147          {
 148   1      //      if (OneCardDataUpload_RecoverCount)
 149   1      //      {
 150   1      //              OneCardDataUpload_RecoverCount--;
 151   1      //      }
 152   1      //      else
 153   1      //      {
 154   1      //              OneCardDataUpload_PollDeviceStatus = 0;
 155   1      //      }
 156   1      }
 157          
 158          
 159          
 160          
 161          
 162          
 163          
 164          
 165          
 166          
 167          
 168          
 169          
 170          
 171          
 172          
C51 COMPILER V9.54   MIDDLEWARE_CONTROLLERPOLLDEVICE                                       01/10/2017 18:08:21 PAGE 4   

 173          
 174          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    278    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
