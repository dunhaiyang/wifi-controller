C51 COMPILER V9.54   COMMAND_WHITELISTUPLOAD                                               01/18/2017 12:57:30 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE COMMAND_WHITELISTUPLOAD
OBJECT MODULE PLACED IN ..\output\Command_WhiteListUpload.obj
COMPILER INVOKED BY: D:\c51_keil\C51\BIN\C51.EXE SourceFile\App\Command_WhiteList\Command_WhiteListUpload.c LARGE OPTIMI
                    -ZE(8,SPEED) BROWSE INCDIR(.\HeadFile\Arch;.\HeadFile\OS_api;.\HeadFile\KQA_OS;.\HeadFile\App_api;.\HeadFile\App\Command_
                    -Conter;.\HeadFile\App\Command_DataStructure;.\HeadFile\App\Command_Device;.\HeadFile\App\Command_Repeater;.\HeadFile\App
                    -\Command_WhiteList;.\HeadFile\App\Command_Kernel;.\HeadFile\MiddlewareBoardcast;.\HeadFile\MiddlewareMenu;.\HeadFile\Mid
                    -dlewareTask;.\HeadFile\MiddlewareWireless;.\HeadFile\MiddlewareSocket;.\HeadFile\MiddlewareWesocket) DEBUG OBJECTEXTEND 
                    -PRINT(..\listing\Command_WhiteListUpload.lst) OBJECT(..\output\Command_WhiteListUpload.obj)

line level    source

   1          #include "Command_WhiteListUpload.h"
   2          
   3          
   4          uint8_t WhiteListUpload_DeviceType = 0xFF;
   5          
   6          // 处理白名单上报数据
   7          //
   8          void WhiteListUpload_DealData(uint8_t *Data)
   9          {
  10   1          uint8_t tmpCommandNo        = Data[0];
  11   1          
  12   1          uint8_t tmpCommandSerialNo  = Data[1];
  13   1          
  14   1          uint8_t tmpDeviceNoL        = Data[3];
  15   1          
  16   1          uint8_t tmpDeviceNoH        = Data[4];
  17   1          
  18   1          uint8_t tmpDeviceType       = Data[5];
  19   1          
  20   1          uint8_t tmpRepeater1        = Data[6];
  21   1          
  22   1          uint8_t tmpRepeater2        = Data[7];
  23   1          
  24   1          uint8_t tmpRepeater3        = Data[8];
  25   1          
  26   1          uint8_t tmpWhiteListLen     = Data[10];
  27   1          
  28   1          uint16_t tmpParityValue       = 0;
  29   1          
  30   1          // 保存设备类型，在应答包中使用
  31   1          //
  32   1          WhiteListUpload_DeviceType = tmpDeviceType;
  33   1          
  34   1          
  35   1          // 设备编号
  36   1          //
  37   1          NRF905_SendBuffer[0] = tmpDeviceNoL;
  38   1          
  39   1          NRF905_SendBuffer[1] = tmpDeviceNoH;
  40   1          
  41   1          // 命令编号
  42   1          //
  43   1          NRF905_SendBuffer[2] = tmpCommandNo;
  44   1          
  45   1          // 命令流水号
  46   1          //
  47   1          NRF905_SendBuffer[3] = tmpCommandSerialNo;
  48   1          
  49   1          // 目的中继
  50   1          //
C51 COMPILER V9.54   COMMAND_WHITELISTUPLOAD                                               01/18/2017 12:57:30 PAGE 2   

  51   1          NRF905_SendBuffer[4] = tmpRepeater1;
  52   1          
  53   1          // 中继1
  54   1          //
  55   1          NRF905_SendBuffer[5] = tmpRepeater1;
  56   1          
  57   1          // 中继2
  58   1          //
  59   1          NRF905_SendBuffer[6] = tmpRepeater2;
  60   1          
  61   1          // 中继3
  62   1          //
  63   1          NRF905_SendBuffer[7] = tmpRepeater3;
  64   1          
  65   1          // 数据
  66   1          //
  67   1          NRF905_SendBuffer[8] = 0xE3;
  68   1          memcpy(NRF905_SendBuffer + 9, Data + 9, tmpWhiteListLen + 2);
  69   1          NRF905_SendBuffer[29] = 0xE3;
  70   1          
  71   1          // 内部和校验
  72   1          //
  73   1          tmpParityValue = Temporary_CalcSumParity(NRF905_SendBuffer + 8, 19);
  74   1          NRF905_SendBuffer[27] = tmpParityValue;
  75   1          NRF905_SendBuffer[28] = tmpParityValue >> 8;
  76   1          
  77   1          // 外部和校验
  78   1          //
  79   1          tmpParityValue = Temporary_CalcSumParity(NRF905_SendBuffer, 30);
  80   1          NRF905_SendBuffer[Enum_Wirelss_ParityL] = tmpParityValue;
  81   1          NRF905_SendBuffer[Enum_Wirelss_ParityH] = tmpParityValue >> 8;
  82   1          
  83   1          // 发送数据到无线设备
  84   1          //
  85   1              App_Hal_Api.wireless->write(NRF905_SendBuffer);
  86   1              
  87   1              // 根据中继来设置无线发送等待超时时间
  88   1              //
  89   1              Pca_Start(NRF905_SendBuffer, 0);
  90   1      }
  91          
  92          
  93          void WhiteListUpload_SendDataToPC(uint8_t *Data)
  94          {
  95   1          uint8_t tmpDeviceNoL        = Data[0];
  96   1          
  97   1          uint8_t tmpDeviceNoH        = Data[1];
  98   1          
  99   1          uint8_t tmpCommandSerialNo  = Data[3];
 100   1          
 101   1          uint8_t tmpUploadMode       = Data[9];
 102   1          
 103   1          uint8_t tmpWhiteListLen     = Data[10];
 104   1          
 105   1          uint8_t tmpUploadStatus     = Data[27];
 106   1          
 107   1          // 设备编号
 108   1          //
 109   1          SocketData_SendBuffer[0] = tmpDeviceNoL;
 110   1          
 111   1          SocketData_SendBuffer[1] = tmpDeviceNoH;
 112   1          
C51 COMPILER V9.54   COMMAND_WHITELISTUPLOAD                                               01/18/2017 12:57:30 PAGE 3   

 113   1          // 设备类型
 114   1          //
 115   1          SocketData_SendBuffer[2] = WhiteListUpload_DeviceType;
 116   1              
 117   1              // 上传情况
 118   1              //
 119   1              SocketData_SendBuffer[3] = Data[27];
 120   1          
 121   1          memcpy(SocketData_SendBuffer + 4, Data + 9, 2 + tmpWhiteListLen);
 122   1          
 123   1          // 发送中继器测试包给PC
 124   1          //
 125   1          PC_SendCommand(0x12, tmpCommandSerialNo, SocketData_SendBuffer,  tmpWhiteListLen + 6);
 126   1      }
 127          
 128          
 129          
 130          
 131          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    408    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
